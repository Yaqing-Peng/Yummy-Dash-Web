{"remainingRequest":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/src/views/employee/index.vue?vue&type=style&index=0&id=19442e4b&lang=scss&scoped=true","dependencies":[{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/src/views/employee/index.vue","mtime":1711672385384},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jasmine/Desktop/projects/vue-proj/yummy-dash-admin-vue-ts/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.disabled-text {\r\n  color: #bac0cd !important;\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAgIA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/employee","sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <div class=\"container\">\r\n      <div class=\"tableBar\">\r\n        <label style=\"margin-right: 5px\">\r\n          Employee Name:\r\n        </label>\r\n        <el-input v-model=\"name\" placeholder=\"Please input name\" style=\"width: 20%\" />\r\n        <el-button type=\"primary\" style=\"margin-left: 25px\" @click=\"pageQuery()\">Search</el-button>\r\n        <el-button type=\"primary\" style=\"float: right\" @click=\"handleAddEmp\">+ Add</el-button>\r\n      </div>\r\n\r\n      <el-table :data=\"records\" stripe style=\"width: 100%\">\r\n        <el-table-column prop=\"name\" label=\"Name\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"username\" label=\"User Name\" width=\"180\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"Phone\">\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"Status\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.status === 0 ? 'Enable' : 'Disable' }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"updateTime\" label=\"Update Time\">\r\n        </el-table-column>\r\n        <el-table-column label=\"Operations\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" @click=\"handleUpdateEmp(scope.row)\">Edit</el-button>\r\n            <el-button type=\"text\" @click=\"handleStartOrStop(scope.row)\">{{ scope.row.status === 1 ? 'Enable' :\r\n          'Disable' }}</el-button>\r\n          </template>\r\n        </el-table-column>\r\n    </el-table>\r\n      <el-pagination class=\"pageList\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n        :current-page=\"page\" :page-sizes=\"[10, 20, 30, 40, 50]\" :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script lang=\"ts\">\r\nimport {getEmployeeList,enableOrDisableEmployee} from '@/api/employee'\r\nimport router from '@/router';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      page: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      records: []\r\n    }\r\n  },\r\n  created() {\r\n    this.pageQuery()\r\n  },\r\n  methods: {\r\n    pageQuery() {\r\n      //page query\r\n      const params = {name:this.name,page:this.page,pageSize:this.pageSize}\r\n      getEmployeeList(params).then(res => {\r\n        if(res.data.code === 1) {\r\n          this.total = res.data.data.total\r\n          this.records = res.data.data.records\r\n        }\r\n      }).catch(err => {\r\n        this.$message.error('Request Error: ' + err.message)\r\n      })\r\n    },\r\n    //change pageSize\r\n    handleSizeChange(pageSize) {\r\n      this.pageSize = pageSize\r\n      this.pageQuery()\r\n    },\r\n    //change page\r\n    handleCurrentChange(page) {\r\n      this.page = page\r\n      this.pageQuery()\r\n    },\r\n    //enable/disable \r\n    handleStartOrStop(row) {\r\n      if(row.username === 'admin'){\r\n        this.$message.error('Admin status cannot be changed!')\r\n        return\r\n      }\r\n\r\n    //confirm alert\r\n    this.$confirm('Are you confirmed to change the status?', 'Info', {\r\n          confirmButtonText: 'Confirm',\r\n          cancelButtonText: 'Cancel',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          const p = {\r\n            id: row.id,\r\n            status: !row.status ? 1 : 0\r\n          }\r\n          enableOrDisableEmployee(p).then(res => {\r\n            if(res.data.code === 1) {\r\n              this.$message.success('Employee status has been successfully changed!')\r\n              this.pageQuery()\r\n            }\r\n          })\r\n        })\r\n    },\r\n    //change to add page\r\n    handleAddEmp(){\r\n      this.$router.push('/employee/add')\r\n    },\r\n    //change to edit page\r\n    handleUpdateEmp(row) {\r\n      if(row.username === 'admin'){\r\n        this.$message.error('Admin profile cannot be changed!')\r\n        return \r\n      }\r\n      this.$router.push({\r\n        path: '/employee/add',\r\n        query: {id: row.id}\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.disabled-text {\r\n  color: #bac0cd !important;\r\n}\r\n</style>\r\n"]}]}